policy_module(merit, 1.100.1)

########################################
#
# Declarations
#

type merit_t;
type merit_exec_t;
init_daemon_domain(merit_t, merit_exec_t)

permissive merit_t;

type merit_initrc_exec_t;
init_script_file(merit_initrc_exec_t)

type merit_conf_t;
files_type(merit_conf_t)

type merit_var_lib_t;
files_type(merit_var_lib_t)

type merit_var_run_t;
files_type(merit_var_run_t)

type merit_port_t;
corenet_port(merit_port_t)

########################################
#
# merit local policy
#
allow merit_t self:process { fork };

allow merit_t self:fifo_file rw_fifo_file_perms;
allow merit_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(merit_t, merit_conf_t, merit_conf_t)
manage_files_pattern(merit_t, merit_conf_t, merit_conf_t)

manage_dirs_pattern(merit_t, merit_var_lib_t, merit_var_lib_t)
manage_files_pattern(merit_t, merit_var_lib_t, merit_var_lib_t)
files_var_lib_filetrans(merit_t, merit_var_lib_t, { dir file })

manage_dirs_pattern(merit_t, merit_var_run_t, merit_var_run_t)
manage_files_pattern(merit_t, merit_var_run_t, merit_var_run_t)

sysnet_dns_name_resolve(merit_t)
corenet_all_recvfrom_unlabeled(merit_t)

allow merit_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(merit_t)
corenet_tcp_sendrecv_generic_node(merit_t)
corenet_tcp_sendrecv_all_ports(merit_t)
corenet_tcp_bind_generic_node(merit_t)

gen_require(`
    type merit_port_t;
')
allow merit_t merit_port_t:tcp_socket name_bind;

gen_require(`
    type merit_port_t;
')
allow merit_t merit_port_t:tcp_socket name_connect;

domain_use_interactive_fds(merit_t)

files_read_etc_files(merit_t)

miscfiles_read_localization(merit_t)

sysnet_dns_name_resolve(merit_t)

allow merit_t merit_exec_t:file execute_no_trans;
allow merit_t self:process setsched;
corecmd_exec_ls(merit_t)
corenet_tcp_connect_http_port(merit_t)
dev_read_urand(merit_t)
fs_getattr_xattr_fs(merit_t)
kernel_read_system_state(merit_t)
